corpusDir: "/app/test-echidna/out/corpus"
seqLen: 100
testMode: assertion
deployContracts: [
  ['0xf1a', 'TokensPair' ],
  ['0xf1b', 'EpochController' ],
  ['0xf1c', 'VaultLib' ],
  ['0xf1d', 'EpochFrequency' ],
  ['0xf1e', 'TimeLock' ],
  ['0xf1f', 'AmountsMath' ],
  ['0xf2a', 'TokenUtils' ],
  ['0xf2b', 'console' ],
  ['0xf2c', 'VaultUtils' ],
  ['0xf2d', 'AddressProviderUtils' ],
  ['0xf2e', 'EchidnaVaultUtils' ],
]
cryticArgs: [
  '--solc-remaps', '@project/=src forge-std/=lib/forge-std/src/ @openzeppelin/=lib/openzeppelin-contracts/ @uniswap/v3-periphery/=lib/v3-periphery/ @uniswap/v3-core/=lib/v3-core/ @solstat/=lib/solstat/src/ prb-math/=lib/solidity-trigonometry/lib/prb-math/contracts/ @prb/math/=lib/prb-math/src/ @chainlink/=lib/chainlink-brownie-contracts/contracts/src/v0.8/ src/=src/',
  '--compile-libraries=(TokensPair,0xf1a),(EpochController,0xf1b),(VaultLib,0xf1c),(EpochFrequency,0xf1d),(TimeLock,0xf1e),(AmountsMath,0xf1f),(TokenUtils,0xf2a),(console,0xf2b),(VaultUtils,0xf2c),(AddressProviderUtils,0xf2d),(EchidnaVaultUtils,0xf2e)'
]
